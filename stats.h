/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _STATS_H_RPCGEN
#define _STATS_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct input1 {
	struct {
		u_int y_len;
		int *y_val;
	} y;
};
typedef struct input1 input1;

struct input2 {
	double a;
	struct {
		u_int y_len;
		int *y_val;
	} y;
};
typedef struct input2 input2;

struct output1 {
	int min_max[2];
};
typedef struct output1 output1;

struct output2 {
	struct {
		u_int pr_aY_len;
		double *pr_aY_val;
	} pr_aY;
};
typedef struct output2 output2;

#define ADD_PROG 0x23451111
#define ADD_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define average 1
extern  double * average_1(input1 *, CLIENT *);
extern  double * average_1_svc(input1 *, struct svc_req *);
#define min_max1 2
extern  output1 * min_max1_1(input1 *, CLIENT *);
extern  output1 * min_max1_1_svc(input1 *, struct svc_req *);
#define prod_aY 3
extern  output2 * prod_ay_1(input2 *, CLIENT *);
extern  output2 * prod_ay_1_svc(input2 *, struct svc_req *);
extern int add_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define average 1
extern  double * average_1();
extern  double * average_1_svc();
#define min_max1 2
extern  output1 * min_max1_1();
extern  output1 * min_max1_1_svc();
#define prod_aY 3
extern  output2 * prod_ay_1();
extern  output2 * prod_ay_1_svc();
extern int add_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_input1 (XDR *, input1*);
extern  bool_t xdr_input2 (XDR *, input2*);
extern  bool_t xdr_output1 (XDR *, output1*);
extern  bool_t xdr_output2 (XDR *, output2*);

#else /* K&R C */
extern bool_t xdr_input1 ();
extern bool_t xdr_input2 ();
extern bool_t xdr_output1 ();
extern bool_t xdr_output2 ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_STATS_H_RPCGEN */
